Microsoft (R) Macro Assembler Version 14.33.31629.0	    09/27/22 15:52:09
SE_Asm03.asm						     Page 1 - 1


				.586P
				.MODEL FLAT, STDCALL
				includelib kernel32.lib

				ExitProcess PROTO :DWORD
				MessageBoxA PROTO : DWORD, : DWORD, : DWORD, : DWORD

				.STACK 4096

 00000000			.CONST

 00000000			.DATA
 00000000 10 20 30 40			myBytes BYTE 10h, 20h, 30h, 40h					; 1 байт
 00000004 008A 003B 0044		myWords WORD 8Ah, 3Bh, 44h, 5Fh, 99h			; 2 байта
	   005F 0099
 0000000E 00000001			myDoubles DWORD 1, 2, 3, 4, 5, 6				; 4 байта
	   00000002
	   00000003
	   00000004
	   00000005
	   00000006
 00000026 0000000E R			myPointer DWORD myDoubles						; 4 байта

 0000002A 00000001			massive DWORD 1, 2, 3, 4, 5, 6, 7				; массив из 7 чисел, для задания с)
	   00000002
	   00000003
	   00000004
	   00000005
	   00000006
	   00000007
 00000046 00000000			sumOfElements DWORD 0							; сумма элементов массива, для задания с)
					
 0000004A C3 EB F3 F8 E5		STR1 DB "Глушеня Полина Андреевна 2-4", 0			
	   ED FF 20 CF EE
	   EB E8 ED E0 20
	   C0 ED E4 F0 E5
	   E5 E2 ED E0 20
	   32 2D 34 00
 00000067 C5 F1 F2 FC 20		STR2 DB "Есть нулевой элемент", 0 
	   ED F3 EB E5 E2
	   EE E9 20 FD EB
	   E5 EC E5 ED F2
	   00
 0000007C CD F3 EB E5 E2		STR3 DB "Нулевого элемента не найдено", 0 
	   EE E3 EE 20 FD
	   EB E5 EC E5 ED
	   F2 E0 20 ED E5
	   20 ED E0 E9 E4
	   E5 ED EE 00

 00000000			.CODE

 00000000			main PROC
 00000000			start: 
 00000000  BE 00000000 R		mov ESI, OFFSET myBytes
 00000005  8A 26			mov AH, [ESI]									; AH = 
 00000007  8A 46 03			mov AL, [ESI + 3]								; AL =

					;Вычислить сумму элементов массива. Результат запомнить в регистре EAX.
 0000000A  BE 0000002A R		mov ESI, OFFSET massive
 0000000F  B9 00000007			mov ECX, lengthof massive						; сугубо счётчик
 00000014  BB 00000001			mov EBX, 1
 00000019			CYCLE:
 00000019  8B 06			mov EAX, [ESI]									; EAX = massive[ESI], ESI = massive[0]
 0000001B  01 05 00000046 R		add sumOfElements, EAX							; sumOfElements = sumOfElements + EAX, добавляем то, что в EAX
 00000021  83 C6 04			add ESI, type massive							; +4 байта
 00000024  83 F8 00			cmp EAX, 0										; само сравнение
 00000027  74 04			jz ZERO
 00000029  E2 EE			loop CYCLE										; --ECX, if (ECX != 0) goto CYCLE
 0000002B  EB 07			jmp ALLOK

 0000002D			ZERO:
 0000002D  BB 00000000			mov EBX, 0	
 00000032  74 07			jz ZD1

 00000034			ALLOK:
 00000034  A1 00000046 R		mov eax, sumOfElements	
 00000039  75 13			jnz ZD2


 0000003B			ZD1:
					INVOKE MessageBoxA, 0, OFFSET Str2, OFFSET Str1, 1
					

 0000004E			ZD2:
					INVOKE MessageBoxA, 0, OFFSET Str3, OFFSET Str1, 1
					
					
 00000061  6A FF		push -1
 00000063  E8 00000000 E	call ExitProcess

 00000068			main ENDP

				end main
Microsoft (R) Macro Assembler Version 14.33.31629.0	    09/27/22 15:52:09
SE_Asm03.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 00000000 Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000099 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000068 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000068 Public STDCALL
  start  . . . . . . . . . . . .	L Near	 00000000 _TEXT	
  CYCLE  . . . . . . . . . . . .	L Near	 00000019 _TEXT	
  ZERO . . . . . . . . . . . . .	L Near	 0000002D _TEXT	
  ALLOK  . . . . . . . . . . . .	L Near	 00000034 _TEXT	
  ZD1  . . . . . . . . . . . . .	L Near	 0000003B _TEXT	
  ZD2  . . . . . . . . . . . . .	L Near	 0000004E _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
STR1 . . . . . . . . . . . . . .	Byte	 0000004A _DATA	
STR2 . . . . . . . . . . . . . .	Byte	 00000067 _DATA	
STR3 . . . . . . . . . . . . . .	Byte	 0000007C _DATA	
massive  . . . . . . . . . . . .	DWord	 0000002A _DATA	
myBytes  . . . . . . . . . . . .	Byte	 00000000 _DATA	
myDoubles  . . . . . . . . . . .	DWord	 0000000E _DATA	
myPointer  . . . . . . . . . . .	DWord	 00000026 _DATA	
myWords  . . . . . . . . . . . .	Word	 00000004 _DATA	
sumOfElements  . . . . . . . . .	DWord	 00000046 _DATA	

	   0 Warnings
	   0 Errors
